name: Deployment Pipeline

on:
  push:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20'

jobs:
  deploy-staging:
    name: 🚀 Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: staging

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: 📥 Install dependencies
      run: npm ci

    - name: 🏗️ Build for staging
      run: npm run build
      env:
        NODE_ENV: production
        NEXT_PUBLIC_VERCEL_ENV: staging

    - name: 🚀 Deploy to Vercel Staging
      run: |
        npm install -g vercel@latest
        vercel --token ${{ secrets.VERCEL_TOKEN }} --yes
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }} # we need to get this variable from vercel
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  create-release-pr:
    name: 📝 Create Release PR
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/develop'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 📝 Create Pull Request to Main
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Check if PR from develop to main already exists
        PR_EXISTS=$(gh pr list --base main --head develop --json number --jq '.[0].number' || echo "")

        if [ -z "$PR_EXISTS" ]; then
          echo "Creating new PR from develop to main..."
          gh pr create \
            --base main \
            --head develop \
            --title "🚀 Release: Deploy develop to production" \
            --label "release" \
            --label "auto-generated" \
            --body "## 🚀 Production Release Candidate

        **Staging Deployment**: Successfully deployed to staging ✅
        **Security Scans**: All security checks passed ✅
        **Tests**: All tests passing ✅

        ### 📋 Release Checklist
        - [x] Code review completed
        - [x] All CI checks passed
        - [x] Staging deployment successful
        - [x] Security audit completed
        - [ ] Manual QA testing on staging
        - [ ] Performance testing completed
        - [ ] Ready for production deployment

        ### 🔗 Links
        - **Staging URL**: Check Vercel deployment
        - **Test Results**: Check Actions tab
        - **Security Report**: Check Security tab

        ### 📝 Changes
        This PR contains all changes from the develop branch ready for production deployment.

        **⚠️ Review Required**: Manual review and approval required before merging to production.

        ---
        🤖 *Auto-generated by GitHub Actions Run #${{ github.run_number }}*"
        else
          echo "PR #$PR_EXISTS already exists from develop to main"
        fi

  deploy-production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: 📥 Install dependencies
      run: npm ci

    - name: 🏗️ Build for production
      run: npm run build
      env:
        NODE_ENV: production
        NEXT_PUBLIC_VERCEL_ENV: production

    - name: 🚀 Deploy to Vercel Production
      run: |
        npm install -g vercel@latest
        vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --yes
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }} # get this from vercel
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    - name: 🎉 Post-deployment notification
      run: |
        echo "🎉 Successfully deployed to production!"
        echo "🔗 Production URL: https://video-delivery-platform-bv9t.vercel.app/"

  performance-monitoring:
    name: 📊 Performance Monitoring
    runs-on: ubuntu-latest
    needs: deploy-production
    if: github.ref == 'refs/heads/main'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: 📥 Install dependencies
      run: npm ci

    - name: 📊 Run performance tests
      run: npx tsx scripts/test-deployment.ts
      env:
        NODE_ENV: production
        TARGET_URL: ${{ secrets.PRODUCTION_URL }}

    - name: 🔍 Lighthouse CI
      run: |
        npm install -g @lhci/cli@0.12.x
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        LHCI_BUILD_CONTEXT__CURRENT_BRANCH: ${{ github.ref_name }}